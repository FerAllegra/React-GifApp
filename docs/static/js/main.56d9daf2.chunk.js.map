{"version":3,"sources":["components/AddGif.js","helpers/getGif.js","components/MostrarImagen.js","components/BuscarGif.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddGif","setcategorias","useState","add","setadd","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","getGif","categoria","a","url","encodeURI","fetch","resp","json","data","gif","map","img","id","title","imagen","images","downsized_medium","MostrarImagen","console","log","className","src","alt","BuscarGif","loading","state","setstate","useEffect","then","imagenes","useFetchGifs","GifExpertApp","categorias","ReactDOM","render","document","getElementById"],"mappings":"mMAmCeA,EAhCA,SAAC,GAAqB,IAAnBC,EAAkB,EAAlBA,cAEd,EAAsBC,mBAAS,6BAA/B,mBAAOC,EAAP,KAAYC,EAAZ,KAgBA,OACI,uBAAMC,SAXS,SAACC,GAChBA,EAAEC,iBAECJ,EAAIK,OAAOC,OAAS,IACnBR,GAAe,SAAAS,GAAI,OAAKP,GAAL,mBAAYO,OAC/BN,EAAO,MAMX,UACA,6BAAKD,IACL,uBACIQ,KAAO,OACPC,MAAUT,EACVU,SApBQ,SAACP,GACbF,EAAOE,EAAEQ,OAAOF,c,+BCRXG,EAAM,uCAAG,WAAMC,GAAN,uBAAAC,EAAA,6DACZC,EADY,yFAC6EC,UAAYH,GADzF,sBAGCI,MAAMF,GAHP,cAGZG,EAHY,gBAIGA,EAAKC,OAJR,uBAIXC,EAJW,EAIXA,KAEDC,EAAMD,EAAKE,KAAI,SAAAC,GACjB,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXC,OAAQH,EAAII,OAAOC,iBAAiBb,QAV1B,kBAcXM,GAdW,4CAAH,sDCENQ,EAAgB,SAAC,GAAuB,IAAtBL,EAAqB,EAArBA,GAAGC,EAAkB,EAAlBA,MAAMC,EAAY,EAAZA,OAGpC,OADAI,QAAQC,IAAIP,EAAGC,EAAMC,GAEjB,sBAAKM,UAAY,8BAAjB,UACI,qBAAKC,IAAKP,EAAQQ,IAAKT,IACvB,4BAAIA,QCsBDU,EA1BG,SAAC,GAAiB,IAAhBtB,EAAe,EAAfA,UAEhB,ECDwB,SAACA,GAEzB,MAA0Bd,mBAAS,CAC/BqB,KAAO,GACPgB,SAAS,IAFb,mBAAOC,EAAP,KAAcC,EAAd,KAmBA,OAdAC,qBAAU,WACN3B,EAAOC,GACF2B,MAAK,SAAAC,GAEFH,EAAS,CACTlB,KAAOqB,EACPL,SAAS,SAInB,CAACvB,IAIIwB,EDpB2BK,CAAa7B,GAAlC4B,EAAb,EAAOrB,KAAgBgB,EAAvB,EAAuBA,QAKvB,OACI,qCACI,oBAAIJ,UAAY,yBAAhB,SAA0CnB,IAEzCuB,GAAW,mBAAGJ,UAAW,iCAAd,qBAEZ,qBAAKA,UAAY,YAAjB,SACUS,EAASnB,KAAI,SAAAC,GAAG,OACd,cAAC,EAAD,eAESA,GADEA,EAAIC,aEUxBmB,EA1BM,WAIjB,MAAoC5C,mBAAS,CAAC,SAA9C,mBAAO6C,EAAP,KAAmB9C,EAAnB,KAGA,OACI,qCACK,cAAC,EAAD,CAAQA,cAAkBA,IAE3B,uBACA,6BAEI8C,EAAWtB,KAAI,SAAAT,GAAS,OACpB,cAAC,EAAD,CAEIA,UAAaA,GADNA,Y,MCZ/BgC,IAASC,OAEL,cAAC,EAAD,IAEFC,SAASC,eAAe,W","file":"static/js/main.56d9daf2.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport { PropTypes } from \"prop-types\";\r\n\r\nconst AddGif = ({ setcategorias })=>{\r\n\r\n    const [add, setadd] = useState('escribe el gif que buscas');//si el useState esta vacio, va a arrojar error, si lo quiero vacio lo dejo ''\r\n\r\n    const agregar = (e)=>{\r\n        setadd(e.target.value);\r\n    }\r\n\r\n    const enviarForm = (e)=>{\r\n        e.preventDefault();\r\n        \r\n        if(add.trim().length > 3){\r\n            setcategorias( cats => [add,...cats] );    \r\n            setadd('');\r\n        }\r\n       \r\n    }\r\n\r\n    return(\r\n        <form onSubmit = { enviarForm }>\r\n        <h1>{add}</h1>\r\n        <input  \r\n            type = \"text\"\r\n            value = { add }\r\n            onChange = {agregar}\r\n        />\r\n        </form>\r\n    );\r\n}\r\nAddGif.propTypes = {\r\n    setcategorias: PropTypes.func.isRequired\r\n}\r\nexport default AddGif;","export const getGif = async(categoria)=>{\r\n    const url = `http://api.giphy.com/v1/gifs/search?api_key=ujtk8QsqLwpyPMpGpcpdeqK9e4eNzH5J&q=${ encodeURI ( categoria )}&limit=10`;\r\n\r\n    const resp = await fetch(url);\r\n    const {data} = await resp.json();\r\n\r\n    const gif = data.map(img=>{\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            imagen: img.images.downsized_medium.url\r\n        }\r\n    });\r\n\r\n    return gif; \r\n    \r\n}","import React from 'react'\r\n\r\nexport const MostrarImagen = ({id,title,imagen}) => {\r\n\r\n    console.log(id,title,imagen);\r\n    return (\r\n        <div className = 'card animate__fadeInLeftBig'>\r\n            <img src={imagen} alt={title}/>\r\n            <p>{title}</p>\r\n        </div>\r\n    )\r\n}\r\n","import { useFetchGifs } from \"../hooks/useFetchGifs\";\r\nimport { MostrarImagen } from \"./MostrarImagen\";\r\n\r\n\r\nconst BuscarGif = ({categoria}) => {\r\n\r\n    const {data: imagenes, loading} = useFetchGifs(categoria);\r\n\r\n    \r\n\r\n\r\n    return (\r\n        <>\r\n            <h3 className = 'animate__fadeInLeftBig'>{categoria}</h3>\r\n            \r\n            {loading && <p className= 'animate-animated animate-flash'>Loading</p>}\r\n\r\n            <div className = 'card-grid'>            \r\n                    { imagenes.map(img=>\r\n                        <MostrarImagen \r\n                            key = {img.id}\r\n                            { ...img }\r\n                        />\r\n                    ) \r\n                    }          \r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default BuscarGif","import { useState , useEffect} from \"react\"\r\nimport { getGif } from \"../helpers/getGif\";\r\n\r\n\r\n\r\nexport const useFetchGifs = (categoria) => {\r\n\r\n    const [state, setstate] = useState({\r\n        data : [],\r\n        loading: true\r\n    })\r\n\r\n    useEffect(()=>{\r\n        getGif(categoria)\r\n            .then(imagenes =>{\r\n               \r\n                setstate({\r\n                data : imagenes,\r\n                loading: false\r\n                })\r\n  \r\n       })\r\n    },[categoria])\r\n\r\n    \r\n\r\n    return state;\r\n}\r\n","import React, { useState } from 'react';\r\nimport AddGif from './components/AddGif';\r\nimport BuscarGif  from './components/BuscarGif';\r\n\r\nconst GifExpertApp = ()=>{\r\n\r\n    \r\n\r\n    const [categorias, setcategorias] = useState(['goku']);\r\n\r\n\r\n    return (\r\n        <>\r\n             <AddGif setcategorias = { setcategorias }/>\r\n\r\n            <hr />\r\n            <ol>\r\n                {\r\n                categorias.map(categoria => (\r\n                    <BuscarGif \r\n                        key = {categoria}\r\n                        categoria = {categoria}\r\n                    />\r\n                ))\r\n                }\r\n            </ol>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default GifExpertApp;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GifExpertApp from './GifExpertApp';\nimport './index.css';\n\n\n\n\nReactDOM.render(\n  \n    <GifExpertApp />,\n  \n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}